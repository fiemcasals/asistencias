services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media_data:/app/media           # subidas de usuarios (persistentes)
      - static_data:/app/staticfiles    # collectstatic (persistente)
      - ./templates:/app/templates:ro
      - .:/app:rw
    expose:
      - "8000"                          # NPM apunta a http://web:8000
    restart: unless-stopped
    networks:
      - net-proxy                       # misma red que NPM
      - default
    command: bash -lc "python manage.py migrate && python manage.py collectstatic --noinput && exec gunicorn diplomaturas.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120 --graceful-timeout 30 --access-logfile - --error-logfile -"

    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport socket,sys; s=socket.socket(); s.settimeout(2); s.connect(('127.0.0.1',8000)); s.close(); sys.exit(0)\nPY"]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 20s

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: America/Argentina/Buenos_Aires
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  db_data:
  media_data:
  static_data:

networks:
  net-proxy:
    external: true
